/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 7937.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 110.0], [1.2, 110.0], [1.3, 110.0], [1.4, 110.0], [1.5, 110.0], [1.6, 110.0], [1.7, 110.0], [1.8, 110.0], [1.9, 110.0], [2.0, 110.0], [2.1, 110.0], [2.2, 110.0], [2.3, 110.0], [2.4, 111.0], [2.5, 111.0], [2.6, 111.0], [2.7, 111.0], [2.8, 111.0], [2.9, 111.0], [3.0, 111.0], [3.1, 111.0], [3.2, 111.0], [3.3, 111.0], [3.4, 111.0], [3.5, 111.0], [3.6, 111.0], [3.7, 111.0], [3.8, 111.0], [3.9, 111.0], [4.0, 111.0], [4.1, 111.0], [4.2, 111.0], [4.3, 112.0], [4.4, 112.0], [4.5, 112.0], [4.6, 112.0], [4.7, 112.0], [4.8, 112.0], [4.9, 112.0], [5.0, 113.0], [5.1, 113.0], [5.2, 113.0], [5.3, 113.0], [5.4, 113.0], [5.5, 113.0], [5.6, 113.0], [5.7, 113.0], [5.8, 113.0], [5.9, 113.0], [6.0, 114.0], [6.1, 114.0], [6.2, 114.0], [6.3, 114.0], [6.4, 114.0], [6.5, 114.0], [6.6, 114.0], [6.7, 114.0], [6.8, 114.0], [6.9, 114.0], [7.0, 114.0], [7.1, 114.0], [7.2, 114.0], [7.3, 114.0], [7.4, 114.0], [7.5, 114.0], [7.6, 114.0], [7.7, 114.0], [7.8, 114.0], [7.9, 114.0], [8.0, 115.0], [8.1, 115.0], [8.2, 116.0], [8.3, 117.0], [8.4, 117.0], [8.5, 117.0], [8.6, 117.0], [8.7, 117.0], [8.8, 117.0], [8.9, 117.0], [9.0, 117.0], [9.1, 117.0], [9.2, 117.0], [9.3, 117.0], [9.4, 117.0], [9.5, 117.0], [9.6, 117.0], [9.7, 117.0], [9.8, 118.0], [9.9, 118.0], [10.0, 118.0], [10.1, 118.0], [10.2, 118.0], [10.3, 118.0], [10.4, 118.0], [10.5, 118.0], [10.6, 118.0], [10.7, 118.0], [10.8, 118.0], [10.9, 118.0], [11.0, 118.0], [11.1, 118.0], [11.2, 118.0], [11.3, 118.0], [11.4, 118.0], [11.5, 118.0], [11.6, 118.0], [11.7, 118.0], [11.8, 118.0], [11.9, 118.0], [12.0, 118.0], [12.1, 118.0], [12.2, 118.0], [12.3, 118.0], [12.4, 118.0], [12.5, 118.0], [12.6, 118.0], [12.7, 118.0], [12.8, 118.0], [12.9, 119.0], [13.0, 119.0], [13.1, 119.0], [13.2, 119.0], [13.3, 119.0], [13.4, 119.0], [13.5, 119.0], [13.6, 119.0], [13.7, 119.0], [13.8, 119.0], [13.9, 119.0], [14.0, 119.0], [14.1, 119.0], [14.2, 119.0], [14.3, 119.0], [14.4, 119.0], [14.5, 119.0], [14.6, 119.0], [14.7, 119.0], [14.8, 119.0], [14.9, 119.0], [15.0, 119.0], [15.1, 119.0], [15.2, 120.0], [15.3, 120.0], [15.4, 120.0], [15.5, 120.0], [15.6, 120.0], [15.7, 120.0], [15.8, 120.0], [15.9, 120.0], [16.0, 120.0], [16.1, 120.0], [16.2, 120.0], [16.3, 120.0], [16.4, 120.0], [16.5, 120.0], [16.6, 120.0], [16.7, 120.0], [16.8, 120.0], [16.9, 120.0], [17.0, 120.0], [17.1, 120.0], [17.2, 120.0], [17.3, 120.0], [17.4, 120.0], [17.5, 120.0], [17.6, 120.0], [17.7, 120.0], [17.8, 120.0], [17.9, 120.0], [18.0, 121.0], [18.1, 121.0], [18.2, 121.0], [18.3, 121.0], [18.4, 121.0], [18.5, 121.0], [18.6, 121.0], [18.7, 121.0], [18.8, 121.0], [18.9, 121.0], [19.0, 121.0], [19.1, 121.0], [19.2, 121.0], [19.3, 121.0], [19.4, 148.0], [19.5, 149.0], [19.6, 152.0], [19.7, 169.0], [19.8, 170.0], [19.9, 170.0], [20.0, 170.0], [20.1, 170.0], [20.2, 170.0], [20.3, 170.0], [20.4, 170.0], [20.5, 171.0], [20.6, 171.0], [20.7, 171.0], [20.8, 171.0], [20.9, 171.0], [21.0, 171.0], [21.1, 171.0], [21.2, 172.0], [21.3, 221.0], [21.4, 222.0], [21.5, 222.0], [21.6, 233.0], [21.7, 233.0], [21.8, 233.0], [21.9, 233.0], [22.0, 234.0], [22.1, 234.0], [22.2, 234.0], [22.3, 234.0], [22.4, 235.0], [22.5, 235.0], [22.6, 241.0], [22.7, 243.0], [22.8, 244.0], [22.9, 245.0], [23.0, 247.0], [23.1, 248.0], [23.2, 248.0], [23.3, 253.0], [23.4, 253.0], [23.5, 253.0], [23.6, 253.0], [23.7, 254.0], [23.8, 256.0], [23.9, 257.0], [24.0, 257.0], [24.1, 257.0], [24.2, 257.0], [24.3, 257.0], [24.4, 257.0], [24.5, 257.0], [24.6, 257.0], [24.7, 257.0], [24.8, 258.0], [24.9, 258.0], [25.0, 258.0], [25.1, 258.0], [25.2, 258.0], [25.3, 258.0], [25.4, 258.0], [25.5, 258.0], [25.6, 258.0], [25.7, 258.0], [25.8, 258.0], [25.9, 258.0], [26.0, 258.0], [26.1, 258.0], [26.2, 258.0], [26.3, 259.0], [26.4, 259.0], [26.5, 260.0], [26.6, 260.0], [26.7, 260.0], [26.8, 261.0], [26.9, 261.0], [27.0, 261.0], [27.1, 261.0], [27.2, 261.0], [27.3, 261.0], [27.4, 261.0], [27.5, 261.0], [27.6, 274.0], [27.7, 274.0], [27.8, 275.0], [27.9, 275.0], [28.0, 275.0], [28.1, 275.0], [28.2, 290.0], [28.3, 290.0], [28.4, 290.0], [28.5, 290.0], [28.6, 290.0], [28.7, 291.0], [28.8, 291.0], [28.9, 291.0], [29.0, 291.0], [29.1, 295.0], [29.2, 296.0], [29.3, 297.0], [29.4, 299.0], [29.5, 301.0], [29.6, 309.0], [29.7, 309.0], [29.8, 310.0], [29.9, 310.0], [30.0, 310.0], [30.1, 310.0], [30.2, 310.0], [30.3, 310.0], [30.4, 310.0], [30.5, 310.0], [30.6, 310.0], [30.7, 310.0], [30.8, 310.0], [30.9, 310.0], [31.0, 310.0], [31.1, 310.0], [31.2, 310.0], [31.3, 310.0], [31.4, 311.0], [31.5, 311.0], [31.6, 312.0], [31.7, 312.0], [31.8, 313.0], [31.9, 313.0], [32.0, 313.0], [32.1, 313.0], [32.2, 314.0], [32.3, 315.0], [32.4, 322.0], [32.5, 322.0], [32.6, 323.0], [32.7, 324.0], [32.8, 325.0], [32.9, 326.0], [33.0, 327.0], [33.1, 331.0], [33.2, 331.0], [33.3, 331.0], [33.4, 332.0], [33.5, 332.0], [33.6, 333.0], [33.7, 333.0], [33.8, 334.0], [33.9, 334.0], [34.0, 335.0], [34.1, 335.0], [34.2, 335.0], [34.3, 335.0], [34.4, 336.0], [34.5, 337.0], [34.6, 337.0], [34.7, 337.0], [34.8, 337.0], [34.9, 337.0], [35.0, 337.0], [35.1, 337.0], [35.2, 337.0], [35.3, 337.0], [35.4, 337.0], [35.5, 337.0], [35.6, 337.0], [35.7, 338.0], [35.8, 338.0], [35.9, 338.0], [36.0, 338.0], [36.1, 338.0], [36.2, 339.0], [36.3, 339.0], [36.4, 339.0], [36.5, 339.0], [36.6, 339.0], [36.7, 339.0], [36.8, 339.0], [36.9, 339.0], [37.0, 339.0], [37.1, 339.0], [37.2, 339.0], [37.3, 340.0], [37.4, 340.0], [37.5, 340.0], [37.6, 340.0], [37.7, 340.0], [37.8, 341.0], [37.9, 342.0], [38.0, 342.0], [38.1, 342.0], [38.2, 343.0], [38.3, 343.0], [38.4, 343.0], [38.5, 349.0], [38.6, 349.0], [38.7, 349.0], [38.8, 352.0], [38.9, 352.0], [39.0, 353.0], [39.1, 366.0], [39.2, 369.0], [39.3, 373.0], [39.4, 373.0], [39.5, 373.0], [39.6, 373.0], [39.7, 373.0], [39.8, 377.0], [39.9, 377.0], [40.0, 377.0], [40.1, 378.0], [40.2, 378.0], [40.3, 378.0], [40.4, 378.0], [40.5, 379.0], [40.6, 386.0], [40.7, 388.0], [40.8, 388.0], [40.9, 389.0], [41.0, 389.0], [41.1, 389.0], [41.2, 397.0], [41.3, 397.0], [41.4, 402.0], [41.5, 403.0], [41.6, 404.0], [41.7, 434.0], [41.8, 439.0], [41.9, 439.0], [42.0, 441.0], [42.1, 442.0], [42.2, 442.0], [42.3, 442.0], [42.4, 442.0], [42.5, 442.0], [42.6, 443.0], [42.7, 443.0], [42.8, 444.0], [42.9, 445.0], [43.0, 445.0], [43.1, 446.0], [43.2, 446.0], [43.3, 446.0], [43.4, 446.0], [43.5, 446.0], [43.6, 446.0], [43.7, 447.0], [43.8, 447.0], [43.9, 447.0], [44.0, 448.0], [44.1, 448.0], [44.2, 448.0], [44.3, 448.0], [44.4, 448.0], [44.5, 448.0], [44.6, 448.0], [44.7, 448.0], [44.8, 448.0], [44.9, 449.0], [45.0, 450.0], [45.1, 450.0], [45.2, 450.0], [45.3, 450.0], [45.4, 451.0], [45.5, 452.0], [45.6, 452.0], [45.7, 452.0], [45.8, 452.0], [45.9, 461.0], [46.0, 468.0], [46.1, 470.0], [46.2, 471.0], [46.3, 476.0], [46.4, 482.0], [46.5, 484.0], [46.6, 484.0], [46.7, 484.0], [46.8, 484.0], [46.9, 485.0], [47.0, 485.0], [47.1, 486.0], [47.2, 486.0], [47.3, 487.0], [47.4, 487.0], [47.5, 487.0], [47.6, 487.0], [47.7, 487.0], [47.8, 487.0], [47.9, 488.0], [48.0, 488.0], [48.1, 488.0], [48.2, 488.0], [48.3, 488.0], [48.4, 489.0], [48.5, 490.0], [48.6, 491.0], [48.7, 492.0], [48.8, 492.0], [48.9, 492.0], [49.0, 492.0], [49.1, 493.0], [49.2, 493.0], [49.3, 494.0], [49.4, 494.0], [49.5, 497.0], [49.6, 498.0], [49.7, 499.0], [49.8, 504.0], [49.9, 505.0], [50.0, 505.0], [50.1, 506.0], [50.2, 506.0], [50.3, 506.0], [50.4, 507.0], [50.5, 507.0], [50.6, 522.0], [50.7, 523.0], [50.8, 523.0], [50.9, 526.0], [51.0, 531.0], [51.1, 532.0], [51.2, 538.0], [51.3, 570.0], [51.4, 572.0], [51.5, 572.0], [51.6, 572.0], [51.7, 578.0], [51.8, 580.0], [51.9, 580.0], [52.0, 581.0], [52.1, 584.0], [52.2, 584.0], [52.3, 584.0], [52.4, 584.0], [52.5, 585.0], [52.6, 585.0], [52.7, 609.0], [52.8, 609.0], [52.9, 609.0], [53.0, 610.0], [53.1, 610.0], [53.2, 611.0], [53.3, 612.0], [53.4, 612.0], [53.5, 615.0], [53.6, 619.0], [53.7, 620.0], [53.8, 620.0], [53.9, 620.0], [54.0, 622.0], [54.1, 622.0], [54.2, 622.0], [54.3, 622.0], [54.4, 623.0], [54.5, 623.0], [54.6, 623.0], [54.7, 623.0], [54.8, 623.0], [54.9, 625.0], [55.0, 625.0], [55.1, 625.0], [55.2, 626.0], [55.3, 626.0], [55.4, 626.0], [55.5, 626.0], [55.6, 627.0], [55.7, 628.0], [55.8, 630.0], [55.9, 630.0], [56.0, 630.0], [56.1, 631.0], [56.2, 633.0], [56.3, 634.0], [56.4, 634.0], [56.5, 635.0], [56.6, 635.0], [56.7, 635.0], [56.8, 635.0], [56.9, 636.0], [57.0, 637.0], [57.1, 637.0], [57.2, 637.0], [57.3, 638.0], [57.4, 639.0], [57.5, 639.0], [57.6, 641.0], [57.7, 649.0], [57.8, 650.0], [57.9, 651.0], [58.0, 651.0], [58.1, 652.0], [58.2, 652.0], [58.3, 653.0], [58.4, 653.0], [58.5, 653.0], [58.6, 653.0], [58.7, 654.0], [58.8, 655.0], [58.9, 656.0], [59.0, 657.0], [59.1, 658.0], [59.2, 692.0], [59.3, 692.0], [59.4, 693.0], [59.5, 693.0], [59.6, 693.0], [59.7, 695.0], [59.8, 696.0], [59.9, 697.0], [60.0, 697.0], [60.1, 697.0], [60.2, 697.0], [60.3, 698.0], [60.4, 698.0], [60.5, 699.0], [60.6, 699.0], [60.7, 699.0], [60.8, 699.0], [60.9, 700.0], [61.0, 700.0], [61.1, 701.0], [61.2, 701.0], [61.3, 702.0], [61.4, 703.0], [61.5, 703.0], [61.6, 703.0], [61.7, 703.0], [61.8, 704.0], [61.9, 705.0], [62.0, 719.0], [62.1, 721.0], [62.2, 721.0], [62.3, 722.0], [62.4, 722.0], [62.5, 722.0], [62.6, 722.0], [62.7, 723.0], [62.8, 723.0], [62.9, 724.0], [63.0, 724.0], [63.1, 724.0], [63.2, 724.0], [63.3, 725.0], [63.4, 725.0], [63.5, 726.0], [63.6, 726.0], [63.7, 726.0], [63.8, 726.0], [63.9, 727.0], [64.0, 727.0], [64.1, 727.0], [64.2, 727.0], [64.3, 727.0], [64.4, 727.0], [64.5, 727.0], [64.6, 728.0], [64.7, 729.0], [64.8, 729.0], [64.9, 730.0], [65.0, 730.0], [65.1, 730.0], [65.2, 731.0], [65.3, 731.0], [65.4, 731.0], [65.5, 731.0], [65.6, 732.0], [65.7, 732.0], [65.8, 732.0], [65.9, 732.0], [66.0, 732.0], [66.1, 733.0], [66.2, 734.0], [66.3, 734.0], [66.4, 734.0], [66.5, 735.0], [66.6, 736.0], [66.7, 736.0], [66.8, 736.0], [66.9, 738.0], [67.0, 738.0], [67.1, 738.0], [67.2, 738.0], [67.3, 738.0], [67.4, 738.0], [67.5, 738.0], [67.6, 738.0], [67.7, 739.0], [67.8, 740.0], [67.9, 740.0], [68.0, 740.0], [68.1, 740.0], [68.2, 740.0], [68.3, 740.0], [68.4, 741.0], [68.5, 742.0], [68.6, 742.0], [68.7, 742.0], [68.8, 742.0], [68.9, 742.0], [69.0, 742.0], [69.1, 743.0], [69.2, 743.0], [69.3, 743.0], [69.4, 744.0], [69.5, 745.0], [69.6, 745.0], [69.7, 747.0], [69.8, 767.0], [69.9, 768.0], [70.0, 769.0], [70.1, 769.0], [70.2, 769.0], [70.3, 769.0], [70.4, 769.0], [70.5, 770.0], [70.6, 771.0], [70.7, 772.0], [70.8, 772.0], [70.9, 772.0], [71.0, 772.0], [71.1, 773.0], [71.2, 773.0], [71.3, 773.0], [71.4, 775.0], [71.5, 775.0], [71.6, 775.0], [71.7, 775.0], [71.8, 776.0], [71.9, 776.0], [72.0, 778.0], [72.1, 779.0], [72.2, 780.0], [72.3, 780.0], [72.4, 780.0], [72.5, 781.0], [72.6, 782.0], [72.7, 783.0], [72.8, 783.0], [72.9, 783.0], [73.0, 783.0], [73.1, 783.0], [73.2, 783.0], [73.3, 784.0], [73.4, 784.0], [73.5, 785.0], [73.6, 785.0], [73.7, 785.0], [73.8, 785.0], [73.9, 785.0], [74.0, 785.0], [74.1, 786.0], [74.2, 787.0], [74.3, 787.0], [74.4, 787.0], [74.5, 787.0], [74.6, 787.0], [74.7, 787.0], [74.8, 787.0], [74.9, 788.0], [75.0, 788.0], [75.1, 788.0], [75.2, 788.0], [75.3, 788.0], [75.4, 788.0], [75.5, 788.0], [75.6, 789.0], [75.7, 789.0], [75.8, 790.0], [75.9, 790.0], [76.0, 791.0], [76.1, 791.0], [76.2, 792.0], [76.3, 792.0], [76.4, 793.0], [76.5, 794.0], [76.6, 794.0], [76.7, 794.0], [76.8, 794.0], [76.9, 795.0], [77.0, 795.0], [77.1, 795.0], [77.2, 797.0], [77.3, 797.0], [77.4, 798.0], [77.5, 800.0], [77.6, 800.0], [77.7, 800.0], [77.8, 801.0], [77.9, 802.0], [78.0, 803.0], [78.1, 803.0], [78.2, 807.0], [78.3, 808.0], [78.4, 808.0], [78.5, 815.0], [78.6, 816.0], [78.7, 816.0], [78.8, 818.0], [78.9, 820.0], [79.0, 820.0], [79.1, 822.0], [79.2, 823.0], [79.3, 826.0], [79.4, 828.0], [79.5, 829.0], [79.6, 860.0], [79.7, 860.0], [79.8, 860.0], [79.9, 861.0], [80.0, 861.0], [80.1, 861.0], [80.2, 861.0], [80.3, 862.0], [80.4, 862.0], [80.5, 862.0], [80.6, 862.0], [80.7, 862.0], [80.8, 862.0], [80.9, 862.0], [81.0, 862.0], [81.1, 863.0], [81.2, 864.0], [81.3, 864.0], [81.4, 864.0], [81.5, 867.0], [81.6, 868.0], [81.7, 868.0], [81.8, 870.0], [81.9, 870.0], [82.0, 871.0], [82.1, 871.0], [82.2, 873.0], [82.3, 880.0], [82.4, 881.0], [82.5, 883.0], [82.6, 886.0], [82.7, 977.0], [82.8, 978.0], [82.9, 1000.0], [83.0, 1000.0], [83.1, 1000.0], [83.2, 1000.0], [83.3, 1000.0], [83.4, 1001.0], [83.5, 1001.0], [83.6, 1001.0], [83.7, 1001.0], [83.8, 1001.0], [83.9, 1001.0], [84.0, 1001.0], [84.1, 1001.0], [84.2, 1001.0], [84.3, 1002.0], [84.4, 1002.0], [84.5, 1003.0], [84.6, 1003.0], [84.7, 1003.0], [84.8, 1003.0], [84.9, 1003.0], [85.0, 1003.0], [85.1, 1003.0], [85.2, 1004.0], [85.3, 1004.0], [85.4, 1004.0], [85.5, 1004.0], [85.6, 1004.0], [85.7, 1004.0], [85.8, 1004.0], [85.9, 1004.0], [86.0, 1004.0], [86.1, 1005.0], [86.2, 1005.0], [86.3, 1005.0], [86.4, 1005.0], [86.5, 1005.0], [86.6, 1005.0], [86.7, 1005.0], [86.8, 1005.0], [86.9, 1005.0], [87.0, 1005.0], [87.1, 1005.0], [87.2, 1006.0], [87.3, 1006.0], [87.4, 1006.0], [87.5, 1006.0], [87.6, 1006.0], [87.7, 1006.0], [87.8, 1007.0], [87.9, 1007.0], [88.0, 1007.0], [88.1, 1007.0], [88.2, 1008.0], [88.3, 1010.0], [88.4, 1010.0], [88.5, 1010.0], [88.6, 1011.0], [88.7, 1011.0], [88.8, 1011.0], [88.9, 1012.0], [89.0, 1013.0], [89.1, 1013.0], [89.2, 1013.0], [89.3, 1013.0], [89.4, 1013.0], [89.5, 1014.0], [89.6, 1014.0], [89.7, 1015.0], [89.8, 1019.0], [89.9, 1020.0], [90.0, 1023.0], [90.1, 1027.0], [90.2, 1027.0], [90.3, 1027.0], [90.4, 1031.0], [90.5, 1032.0], [90.6, 1033.0], [90.7, 1042.0], [90.8, 1043.0], [90.9, 1062.0], [91.0, 1065.0], [91.1, 1069.0], [91.2, 1073.0], [91.3, 1074.0], [91.4, 1076.0], [91.5, 1076.0], [91.6, 1076.0], [91.7, 1078.0], [91.8, 1078.0], [91.9, 1079.0], [92.0, 1081.0], [92.1, 1082.0], [92.2, 1082.0], [92.3, 1085.0], [92.4, 1085.0], [92.5, 1086.0], [92.6, 1086.0], [92.7, 1086.0], [92.8, 1086.0], [92.9, 1086.0], [93.0, 1086.0], [93.1, 1087.0], [93.2, 1087.0], [93.3, 1088.0], [93.4, 1088.0], [93.5, 1090.0], [93.6, 1094.0], [93.7, 1094.0], [93.8, 1095.0], [93.9, 1095.0], [94.0, 1096.0], [94.1, 1096.0], [94.2, 1098.0], [94.3, 1113.0], [94.4, 1115.0], [94.5, 1117.0], [94.6, 1117.0], [94.7, 1117.0], [94.8, 1123.0], [94.9, 1127.0], [95.0, 1130.0], [95.1, 1131.0], [95.2, 1131.0], [95.3, 1132.0], [95.4, 1132.0], [95.5, 1137.0], [95.6, 1137.0], [95.7, 1142.0], [95.8, 1143.0], [95.9, 1143.0], [96.0, 1144.0], [96.1, 1145.0], [96.2, 1174.0], [96.3, 1175.0], [96.4, 1175.0], [96.5, 1175.0], [96.6, 1176.0], [96.7, 1176.0], [96.8, 1177.0], [96.9, 1177.0], [97.0, 1177.0], [97.1, 1177.0], [97.2, 1177.0], [97.3, 1177.0], [97.4, 1177.0], [97.5, 1178.0], [97.6, 1178.0], [97.7, 1178.0], [97.8, 1179.0], [97.9, 3292.0], [98.0, 5035.0], [98.1, 5156.0], [98.2, 5181.0], [98.3, 5187.0], [98.4, 5240.0], [98.5, 5249.0], [98.6, 5303.0], [98.7, 5305.0], [98.8, 5374.0], [98.9, 5385.0], [99.0, 5394.0], [99.1, 5405.0], [99.2, 5417.0], [99.3, 5453.0], [99.4, 5506.0], [99.5, 5515.0], [99.6, 5542.0], [99.7, 5546.0], [99.8, 5563.0], [99.9, 5586.0], [100.0, 5678.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 76.0], [0.1, 76.0], [0.2, 76.0], [0.3, 77.0], [0.4, 77.0], [0.5, 77.0], [0.6, 77.0], [0.7, 77.0], [0.8, 77.0], [0.9, 77.0], [1.0, 77.0], [1.1, 78.0], [1.2, 78.0], [1.3, 78.0], [1.4, 78.0], [1.5, 78.0], [1.6, 79.0], [1.7, 79.0], [1.8, 79.0], [1.9, 79.0], [2.0, 79.0], [2.1, 79.0], [2.2, 79.0], [2.3, 79.0], [2.4, 80.0], [2.5, 80.0], [2.6, 80.0], [2.7, 80.0], [2.8, 80.0], [2.9, 81.0], [3.0, 81.0], [3.1, 81.0], [3.2, 81.0], [3.3, 82.0], [3.4, 83.0], [3.5, 83.0], [3.6, 83.0], [3.7, 83.0], [3.8, 83.0], [3.9, 84.0], [4.0, 84.0], [4.1, 84.0], [4.2, 84.0], [4.3, 84.0], [4.4, 85.0], [4.5, 85.0], [4.6, 85.0], [4.7, 85.0], [4.8, 85.0], [4.9, 85.0], [5.0, 85.0], [5.1, 86.0], [5.2, 86.0], [5.3, 86.0], [5.4, 86.0], [5.5, 86.0], [5.6, 86.0], [5.7, 86.0], [5.8, 86.0], [5.9, 86.0], [6.0, 86.0], [6.1, 87.0], [6.2, 87.0], [6.3, 87.0], [6.4, 87.0], [6.5, 87.0], [6.6, 87.0], [6.7, 87.0], [6.8, 87.0], [6.9, 88.0], [7.0, 88.0], [7.1, 88.0], [7.2, 88.0], [7.3, 88.0], [7.4, 89.0], [7.5, 89.0], [7.6, 89.0], [7.7, 89.0], [7.8, 89.0], [7.9, 89.0], [8.0, 90.0], [8.1, 90.0], [8.2, 90.0], [8.3, 90.0], [8.4, 90.0], [8.5, 90.0], [8.6, 90.0], [8.7, 91.0], [8.8, 91.0], [8.9, 91.0], [9.0, 91.0], [9.1, 91.0], [9.2, 91.0], [9.3, 91.0], [9.4, 92.0], [9.5, 92.0], [9.6, 93.0], [9.7, 93.0], [9.8, 93.0], [9.9, 93.0], [10.0, 93.0], [10.1, 93.0], [10.2, 93.0], [10.3, 93.0], [10.4, 93.0], [10.5, 94.0], [10.6, 94.0], [10.7, 94.0], [10.8, 94.0], [10.9, 94.0], [11.0, 94.0], [11.1, 94.0], [11.2, 94.0], [11.3, 94.0], [11.4, 94.0], [11.5, 94.0], [11.6, 95.0], [11.7, 95.0], [11.8, 95.0], [11.9, 96.0], [12.0, 96.0], [12.1, 97.0], [12.2, 97.0], [12.3, 97.0], [12.4, 97.0], [12.5, 97.0], [12.6, 98.0], [12.7, 98.0], [12.8, 99.0], [12.9, 99.0], [13.0, 99.0], [13.1, 99.0], [13.2, 99.0], [13.3, 100.0], [13.4, 100.0], [13.5, 100.0], [13.6, 100.0], [13.7, 100.0], [13.8, 100.0], [13.9, 100.0], [14.0, 100.0], [14.1, 101.0], [14.2, 101.0], [14.3, 101.0], [14.4, 101.0], [14.5, 101.0], [14.6, 101.0], [14.7, 101.0], [14.8, 101.0], [14.9, 101.0], [15.0, 102.0], [15.1, 102.0], [15.2, 102.0], [15.3, 102.0], [15.4, 103.0], [15.5, 103.0], [15.6, 103.0], [15.7, 103.0], [15.8, 104.0], [15.9, 104.0], [16.0, 104.0], [16.1, 104.0], [16.2, 104.0], [16.3, 104.0], [16.4, 105.0], [16.5, 105.0], [16.6, 105.0], [16.7, 105.0], [16.8, 105.0], [16.9, 106.0], [17.0, 106.0], [17.1, 106.0], [17.2, 106.0], [17.3, 106.0], [17.4, 106.0], [17.5, 106.0], [17.6, 107.0], [17.7, 107.0], [17.8, 108.0], [17.9, 108.0], [18.0, 109.0], [18.1, 109.0], [18.2, 109.0], [18.3, 109.0], [18.4, 110.0], [18.5, 110.0], [18.6, 112.0], [18.7, 113.0], [18.8, 113.0], [18.9, 114.0], [19.0, 116.0], [19.1, 119.0], [19.2, 122.0], [19.3, 123.0], [19.4, 124.0], [19.5, 124.0], [19.6, 124.0], [19.7, 124.0], [19.8, 124.0], [19.9, 124.0], [20.0, 125.0], [20.1, 125.0], [20.2, 128.0], [20.3, 131.0], [20.4, 132.0], [20.5, 135.0], [20.6, 139.0], [20.7, 144.0], [20.8, 146.0], [20.9, 148.0], [21.0, 151.0], [21.1, 160.0], [21.2, 164.0], [21.3, 177.0], [21.4, 180.0], [21.5, 180.0], [21.6, 188.0], [21.7, 188.0], [21.8, 190.0], [21.9, 194.0], [22.0, 197.0], [22.1, 199.0], [22.2, 203.0], [22.3, 205.0], [22.4, 206.0], [22.5, 206.0], [22.6, 208.0], [22.7, 208.0], [22.8, 208.0], [22.9, 208.0], [23.0, 209.0], [23.1, 214.0], [23.2, 214.0], [23.3, 216.0], [23.4, 217.0], [23.5, 217.0], [23.6, 218.0], [23.7, 227.0], [23.8, 237.0], [23.9, 242.0], [24.0, 281.0], [24.1, 281.0], [24.2, 282.0], [24.3, 283.0], [24.4, 284.0], [24.5, 285.0], [24.6, 285.0], [24.7, 286.0], [24.8, 288.0], [24.9, 288.0], [25.0, 289.0], [25.1, 290.0], [25.2, 292.0], [25.3, 292.0], [25.4, 292.0], [25.5, 293.0], [25.6, 295.0], [25.7, 295.0], [25.8, 296.0], [25.9, 297.0], [26.0, 297.0], [26.1, 297.0], [26.2, 298.0], [26.3, 298.0], [26.4, 298.0], [26.5, 298.0], [26.6, 300.0], [26.7, 300.0], [26.8, 300.0], [26.9, 302.0], [27.0, 302.0], [27.1, 302.0], [27.2, 302.0], [27.3, 303.0], [27.4, 303.0], [27.5, 304.0], [27.6, 304.0], [27.7, 305.0], [27.8, 305.0], [27.9, 306.0], [28.0, 307.0], [28.1, 308.0], [28.2, 308.0], [28.3, 308.0], [28.4, 310.0], [28.5, 310.0], [28.6, 310.0], [28.7, 310.0], [28.8, 310.0], [28.9, 318.0], [29.0, 321.0], [29.1, 326.0], [29.2, 328.0], [29.3, 329.0], [29.4, 330.0], [29.5, 330.0], [29.6, 332.0], [29.7, 333.0], [29.8, 333.0], [29.9, 335.0], [30.0, 335.0], [30.1, 362.0], [30.2, 395.0], [30.3, 403.0], [30.4, 412.0], [30.5, 413.0], [30.6, 468.0], [30.7, 468.0], [30.8, 470.0], [30.9, 473.0], [31.0, 473.0], [31.1, 520.0], [31.2, 524.0], [31.3, 524.0], [31.4, 531.0], [31.5, 536.0], [31.6, 536.0], [31.7, 536.0], [31.8, 536.0], [31.9, 536.0], [32.0, 536.0], [32.1, 536.0], [32.2, 536.0], [32.3, 537.0], [32.4, 537.0], [32.5, 537.0], [32.6, 537.0], [32.7, 538.0], [32.8, 538.0], [32.9, 538.0], [33.0, 538.0], [33.1, 538.0], [33.2, 538.0], [33.3, 538.0], [33.4, 539.0], [33.5, 539.0], [33.6, 539.0], [33.7, 540.0], [33.8, 540.0], [33.9, 541.0], [34.0, 541.0], [34.1, 542.0], [34.2, 543.0], [34.3, 543.0], [34.4, 544.0], [34.5, 549.0], [34.6, 551.0], [34.7, 551.0], [34.8, 552.0], [34.9, 553.0], [35.0, 553.0], [35.1, 554.0], [35.2, 555.0], [35.3, 556.0], [35.4, 557.0], [35.5, 558.0], [35.6, 558.0], [35.7, 562.0], [35.8, 562.0], [35.9, 563.0], [36.0, 564.0], [36.1, 564.0], [36.2, 584.0], [36.3, 635.0], [36.4, 639.0], [36.5, 640.0], [36.6, 703.0], [36.7, 706.0], [36.8, 720.0], [36.9, 769.0], [37.0, 784.0], [37.1, 785.0], [37.2, 789.0], [37.3, 790.0], [37.4, 790.0], [37.5, 849.0], [37.6, 849.0], [37.7, 850.0], [37.8, 850.0], [37.9, 851.0], [38.0, 852.0], [38.1, 853.0], [38.2, 853.0], [38.3, 855.0], [38.4, 857.0], [38.5, 865.0], [38.6, 869.0], [38.7, 870.0], [38.8, 872.0], [38.9, 874.0], [39.0, 875.0], [39.1, 875.0], [39.2, 875.0], [39.3, 876.0], [39.4, 876.0], [39.5, 876.0], [39.6, 876.0], [39.7, 877.0], [39.8, 877.0], [39.9, 878.0], [40.0, 880.0], [40.1, 881.0], [40.2, 881.0], [40.3, 882.0], [40.4, 883.0], [40.5, 885.0], [40.6, 885.0], [40.7, 886.0], [40.8, 886.0], [40.9, 887.0], [41.0, 887.0], [41.1, 888.0], [41.2, 888.0], [41.3, 889.0], [41.4, 889.0], [41.5, 889.0], [41.6, 889.0], [41.7, 890.0], [41.8, 890.0], [41.9, 890.0], [42.0, 891.0], [42.1, 891.0], [42.2, 891.0], [42.3, 892.0], [42.4, 892.0], [42.5, 892.0], [42.6, 892.0], [42.7, 892.0], [42.8, 893.0], [42.9, 893.0], [43.0, 893.0], [43.1, 895.0], [43.2, 895.0], [43.3, 898.0], [43.4, 898.0], [43.5, 900.0], [43.6, 900.0], [43.7, 902.0], [43.8, 903.0], [43.9, 904.0], [44.0, 905.0], [44.1, 905.0], [44.2, 905.0], [44.3, 906.0], [44.4, 906.0], [44.5, 907.0], [44.6, 908.0], [44.7, 908.0], [44.8, 908.0], [44.9, 912.0], [45.0, 912.0], [45.1, 912.0], [45.2, 913.0], [45.3, 913.0], [45.4, 913.0], [45.5, 913.0], [45.6, 913.0], [45.7, 914.0], [45.8, 914.0], [45.9, 915.0], [46.0, 915.0], [46.1, 915.0], [46.2, 915.0], [46.3, 918.0], [46.4, 918.0], [46.5, 919.0], [46.6, 919.0], [46.7, 919.0], [46.8, 919.0], [46.9, 920.0], [47.0, 921.0], [47.1, 922.0], [47.2, 923.0], [47.3, 923.0], [47.4, 924.0], [47.5, 925.0], [47.6, 926.0], [47.7, 927.0], [47.8, 927.0], [47.9, 927.0], [48.0, 927.0], [48.1, 928.0], [48.2, 928.0], [48.3, 929.0], [48.4, 929.0], [48.5, 929.0], [48.6, 930.0], [48.7, 930.0], [48.8, 930.0], [48.9, 930.0], [49.0, 930.0], [49.1, 931.0], [49.2, 932.0], [49.3, 932.0], [49.4, 932.0], [49.5, 934.0], [49.6, 935.0], [49.7, 935.0], [49.8, 936.0], [49.9, 939.0], [50.0, 939.0], [50.1, 940.0], [50.2, 940.0], [50.3, 941.0], [50.4, 941.0], [50.5, 942.0], [50.6, 943.0], [50.7, 943.0], [50.8, 944.0], [50.9, 944.0], [51.0, 944.0], [51.1, 945.0], [51.2, 947.0], [51.3, 947.0], [51.4, 947.0], [51.5, 947.0], [51.6, 948.0], [51.7, 949.0], [51.8, 951.0], [51.9, 953.0], [52.0, 954.0], [52.1, 956.0], [52.2, 959.0], [52.3, 959.0], [52.4, 960.0], [52.5, 962.0], [52.6, 963.0], [52.7, 976.0], [52.8, 977.0], [52.9, 977.0], [53.0, 977.0], [53.1, 977.0], [53.2, 977.0], [53.3, 977.0], [53.4, 978.0], [53.5, 978.0], [53.6, 978.0], [53.7, 978.0], [53.8, 979.0], [53.9, 979.0], [54.0, 981.0], [54.1, 981.0], [54.2, 981.0], [54.3, 983.0], [54.4, 983.0], [54.5, 983.0], [54.6, 983.0], [54.7, 983.0], [54.8, 984.0], [54.9, 988.0], [55.0, 990.0], [55.1, 993.0], [55.2, 995.0], [55.3, 996.0], [55.4, 996.0], [55.5, 997.0], [55.6, 998.0], [55.7, 998.0], [55.8, 999.0], [55.9, 999.0], [56.0, 1000.0], [56.1, 1000.0], [56.2, 1000.0], [56.3, 1000.0], [56.4, 1000.0], [56.5, 1000.0], [56.6, 1000.0], [56.7, 1000.0], [56.8, 1000.0], [56.9, 1001.0], [57.0, 1001.0], [57.1, 1001.0], [57.2, 1002.0], [57.3, 1002.0], [57.4, 1002.0], [57.5, 1002.0], [57.6, 1002.0], [57.7, 1002.0], [57.8, 1002.0], [57.9, 1004.0], [58.0, 1004.0], [58.1, 1004.0], [58.2, 1004.0], [58.3, 1005.0], [58.4, 1005.0], [58.5, 1005.0], [58.6, 1005.0], [58.7, 1005.0], [58.8, 1005.0], [58.9, 1005.0], [59.0, 1006.0], [59.1, 1006.0], [59.2, 1006.0], [59.3, 1006.0], [59.4, 1006.0], [59.5, 1008.0], [59.6, 1008.0], [59.7, 1009.0], [59.8, 1016.0], [59.9, 1018.0], [60.0, 1022.0], [60.1, 1022.0], [60.2, 1022.0], [60.3, 1028.0], [60.4, 1030.0], [60.5, 1031.0], [60.6, 1031.0], [60.7, 1032.0], [60.8, 1032.0], [60.9, 1034.0], [61.0, 1036.0], [61.1, 1038.0], [61.2, 1038.0], [61.3, 1039.0], [61.4, 1039.0], [61.5, 1040.0], [61.6, 1040.0], [61.7, 1040.0], [61.8, 1041.0], [61.9, 1041.0], [62.0, 1043.0], [62.1, 1043.0], [62.2, 1044.0], [62.3, 1044.0], [62.4, 1045.0], [62.5, 1045.0], [62.6, 1045.0], [62.7, 1046.0], [62.8, 1046.0], [62.9, 1047.0], [63.0, 1047.0], [63.1, 1048.0], [63.2, 1048.0], [63.3, 1049.0], [63.4, 1049.0], [63.5, 1050.0], [63.6, 1050.0], [63.7, 1050.0], [63.8, 1051.0], [63.9, 1051.0], [64.0, 1051.0], [64.1, 1052.0], [64.2, 1052.0], [64.3, 1052.0], [64.4, 1053.0], [64.5, 1055.0], [64.6, 1057.0], [64.7, 1059.0], [64.8, 1059.0], [64.9, 1061.0], [65.0, 1061.0], [65.1, 1062.0], [65.2, 1062.0], [65.3, 1063.0], [65.4, 1065.0], [65.5, 1065.0], [65.6, 1068.0], [65.7, 1073.0], [65.8, 1074.0], [65.9, 1075.0], [66.0, 1076.0], [66.1, 1076.0], [66.2, 1077.0], [66.3, 1077.0], [66.4, 1077.0], [66.5, 1077.0], [66.6, 1078.0], [66.7, 1078.0], [66.8, 1079.0], [66.9, 1079.0], [67.0, 1080.0], [67.1, 1080.0], [67.2, 1080.0], [67.3, 1080.0], [67.4, 1080.0], [67.5, 1080.0], [67.6, 1080.0], [67.7, 1081.0], [67.8, 1086.0], [67.9, 1087.0], [68.0, 1087.0], [68.1, 1087.0], [68.2, 1087.0], [68.3, 1088.0], [68.4, 1090.0], [68.5, 1091.0], [68.6, 1091.0], [68.7, 1091.0], [68.8, 1091.0], [68.9, 1092.0], [69.0, 1092.0], [69.1, 1092.0], [69.2, 1093.0], [69.3, 1093.0], [69.4, 1093.0], [69.5, 1093.0], [69.6, 1094.0], [69.7, 1094.0], [69.8, 1095.0], [69.9, 1095.0], [70.0, 1095.0], [70.1, 1096.0], [70.2, 1096.0], [70.3, 1096.0], [70.4, 1096.0], [70.5, 1097.0], [70.6, 1097.0], [70.7, 1097.0], [70.8, 1098.0], [70.9, 1098.0], [71.0, 1098.0], [71.1, 1099.0], [71.2, 1099.0], [71.3, 1099.0], [71.4, 1099.0], [71.5, 1099.0], [71.6, 1099.0], [71.7, 1099.0], [71.8, 1099.0], [71.9, 1099.0], [72.0, 1099.0], [72.1, 1100.0], [72.2, 1100.0], [72.3, 1101.0], [72.4, 1101.0], [72.5, 1101.0], [72.6, 1101.0], [72.7, 1101.0], [72.8, 1101.0], [72.9, 1101.0], [73.0, 1101.0], [73.1, 1101.0], [73.2, 1102.0], [73.3, 1102.0], [73.4, 1102.0], [73.5, 1102.0], [73.6, 1102.0], [73.7, 1102.0], [73.8, 1102.0], [73.9, 1102.0], [74.0, 1102.0], [74.1, 1103.0], [74.2, 1103.0], [74.3, 1103.0], [74.4, 1103.0], [74.5, 1103.0], [74.6, 1103.0], [74.7, 1103.0], [74.8, 1103.0], [74.9, 1104.0], [75.0, 1104.0], [75.1, 1104.0], [75.2, 1104.0], [75.3, 1105.0], [75.4, 1105.0], [75.5, 1105.0], [75.6, 1105.0], [75.7, 1105.0], [75.8, 1105.0], [75.9, 1105.0], [76.0, 1106.0], [76.1, 1108.0], [76.2, 1112.0], [76.3, 1112.0], [76.4, 1113.0], [76.5, 1113.0], [76.6, 1113.0], [76.7, 1113.0], [76.8, 1114.0], [76.9, 1115.0], [77.0, 1115.0], [77.1, 1116.0], [77.2, 1116.0], [77.3, 1117.0], [77.4, 1125.0], [77.5, 1140.0], [77.6, 1141.0], [77.7, 1142.0], [77.8, 1142.0], [77.9, 1143.0], [78.0, 1143.0], [78.1, 1143.0], [78.2, 1143.0], [78.3, 1144.0], [78.4, 1144.0], [78.5, 1145.0], [78.6, 1145.0], [78.7, 1145.0], [78.8, 1145.0], [78.9, 1145.0], [79.0, 1145.0], [79.1, 1146.0], [79.2, 1146.0], [79.3, 1146.0], [79.4, 1147.0], [79.5, 1148.0], [79.6, 1149.0], [79.7, 1150.0], [79.8, 1150.0], [79.9, 1150.0], [80.0, 1151.0], [80.1, 1152.0], [80.2, 1152.0], [80.3, 1153.0], [80.4, 1153.0], [80.5, 1156.0], [80.6, 1158.0], [80.7, 1160.0], [80.8, 1160.0], [80.9, 1161.0], [81.0, 1161.0], [81.1, 1161.0], [81.2, 1161.0], [81.3, 1161.0], [81.4, 1162.0], [81.5, 1162.0], [81.6, 1163.0], [81.7, 1163.0], [81.8, 1167.0], [81.9, 1169.0], [82.0, 1173.0], [82.1, 1174.0], [82.2, 1176.0], [82.3, 1176.0], [82.4, 1178.0], [82.5, 1179.0], [82.6, 1184.0], [82.7, 1191.0], [82.8, 1194.0], [82.9, 1196.0], [83.0, 1204.0], [83.1, 1206.0], [83.2, 1206.0], [83.3, 1207.0], [83.4, 1208.0], [83.5, 1209.0], [83.6, 1209.0], [83.7, 1209.0], [83.8, 1211.0], [83.9, 1217.0], [84.0, 1217.0], [84.1, 1217.0], [84.2, 1217.0], [84.3, 1220.0], [84.4, 1222.0], [84.5, 1223.0], [84.6, 1235.0], [84.7, 1237.0], [84.8, 1238.0], [84.9, 1239.0], [85.0, 1240.0], [85.1, 1241.0], [85.2, 1241.0], [85.3, 1246.0], [85.4, 1247.0], [85.5, 1253.0], [85.6, 1279.0], [85.7, 1281.0], [85.8, 1282.0], [85.9, 1285.0], [86.0, 1285.0], [86.1, 1303.0], [86.2, 1306.0], [86.3, 1307.0], [86.4, 1316.0], [86.5, 1318.0], [86.6, 1319.0], [86.7, 1326.0], [86.8, 1329.0], [86.9, 1329.0], [87.0, 1334.0], [87.1, 1341.0], [87.2, 1343.0], [87.3, 1347.0], [87.4, 1349.0], [87.5, 1349.0], [87.6, 1350.0], [87.7, 1350.0], [87.8, 1351.0], [87.9, 1352.0], [88.0, 1352.0], [88.1, 1352.0], [88.2, 1355.0], [88.3, 1355.0], [88.4, 1357.0], [88.5, 1357.0], [88.6, 1357.0], [88.7, 1358.0], [88.8, 1358.0], [88.9, 1359.0], [89.0, 1360.0], [89.1, 1361.0], [89.2, 1362.0], [89.3, 1362.0], [89.4, 1363.0], [89.5, 1363.0], [89.6, 1363.0], [89.7, 1364.0], [89.8, 1365.0], [89.9, 1366.0], [90.0, 1366.0], [90.1, 1366.0], [90.2, 1366.0], [90.3, 1366.0], [90.4, 1367.0], [90.5, 1368.0], [90.6, 1368.0], [90.7, 1368.0], [90.8, 1370.0], [90.9, 1370.0], [91.0, 1371.0], [91.1, 1372.0], [91.2, 1375.0], [91.3, 1376.0], [91.4, 1379.0], [91.5, 1379.0], [91.6, 1381.0], [91.7, 1384.0], [91.8, 1386.0], [91.9, 1387.0], [92.0, 1387.0], [92.1, 1395.0], [92.2, 1396.0], [92.3, 1396.0], [92.4, 1397.0], [92.5, 1397.0], [92.6, 1397.0], [92.7, 1397.0], [92.8, 1397.0], [92.9, 1398.0], [93.0, 1398.0], [93.1, 1398.0], [93.2, 1398.0], [93.3, 1398.0], [93.4, 1398.0], [93.5, 1398.0], [93.6, 1399.0], [93.7, 1399.0], [93.8, 1399.0], [93.9, 1399.0], [94.0, 1399.0], [94.1, 1400.0], [94.2, 1402.0], [94.3, 1410.0], [94.4, 1427.0], [94.5, 1427.0], [94.6, 1445.0], [94.7, 1453.0], [94.8, 1454.0], [94.9, 1454.0], [95.0, 1468.0], [95.1, 1470.0], [95.2, 1477.0], [95.3, 1477.0], [95.4, 1477.0], [95.5, 1478.0], [95.6, 1478.0], [95.7, 1484.0], [95.8, 1484.0], [95.9, 1484.0], [96.0, 1490.0], [96.1, 1490.0], [96.2, 1490.0], [96.3, 1491.0], [96.4, 1492.0], [96.5, 1493.0], [96.6, 1493.0], [96.7, 1501.0], [96.8, 1508.0], [96.9, 1510.0], [97.0, 1515.0], [97.1, 1516.0], [97.2, 1517.0], [97.3, 1517.0], [97.4, 1517.0], [97.5, 1518.0], [97.6, 1518.0], [97.7, 1518.0], [97.8, 1529.0], [97.9, 1873.0], [98.0, 2007.0], [98.1, 2027.0], [98.2, 2054.0], [98.3, 2119.0], [98.4, 2125.0], [98.5, 2154.0], [98.6, 2259.0], [98.7, 2267.0], [98.8, 2331.0], [98.9, 2355.0], [99.0, 2400.0], [99.1, 2402.0], [99.2, 2418.0], [99.3, 2436.0], [99.4, 2453.0], [99.5, 2467.0], [99.6, 2489.0], [99.7, 2532.0], [99.8, 2572.0], [99.9, 2678.0], [100.0, 2692.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 1.0], [23.2, 1.0], [23.3, 1.0], [23.4, 1.0], [23.5, 1.0], [23.6, 1.0], [23.7, 1.0], [23.8, 1.0], [23.9, 1.0], [24.0, 1.0], [24.1, 1.0], [24.2, 1.0], [24.3, 1.0], [24.4, 1.0], [24.5, 1.0], [24.6, 1.0], [24.7, 1.0], [24.8, 1.0], [24.9, 1.0], [25.0, 1.0], [25.1, 1.0], [25.2, 1.0], [25.3, 1.0], [25.4, 1.0], [25.5, 1.0], [25.6, 1.0], [25.7, 1.0], [25.8, 1.0], [25.9, 1.0], [26.0, 1.0], [26.1, 1.0], [26.2, 1.0], [26.3, 1.0], [26.4, 1.0], [26.5, 1.0], [26.6, 1.0], [26.7, 1.0], [26.8, 1.0], [26.9, 1.0], [27.0, 1.0], [27.1, 1.0], [27.2, 1.0], [27.3, 1.0], [27.4, 1.0], [27.5, 1.0], [27.6, 1.0], [27.7, 1.0], [27.8, 1.0], [27.9, 1.0], [28.0, 1.0], [28.1, 1.0], [28.2, 1.0], [28.3, 1.0], [28.4, 1.0], [28.5, 1.0], [28.6, 1.0], [28.7, 1.0], [28.8, 1.0], [28.9, 1.0], [29.0, 1.0], [29.1, 1.0], [29.2, 1.0], [29.3, 1.0], [29.4, 1.0], [29.5, 1.0], [29.6, 1.0], [29.7, 1.0], [29.8, 1.0], [29.9, 1.0], [30.0, 1.0], [30.1, 1.0], [30.2, 1.0], [30.3, 1.0], [30.4, 1.0], [30.5, 1.0], [30.6, 1.0], [30.7, 1.0], [30.8, 1.0], [30.9, 1.0], [31.0, 1.0], [31.1, 1.0], [31.2, 1.0], [31.3, 1.0], [31.4, 1.0], [31.5, 1.0], [31.6, 1.0], [31.7, 1.0], [31.8, 1.0], [31.9, 1.0], [32.0, 1.0], [32.1, 1.0], [32.2, 1.0], [32.3, 1.0], [32.4, 1.0], [32.5, 1.0], [32.6, 1.0], [32.7, 1.0], [32.8, 1.0], [32.9, 1.0], [33.0, 1.0], [33.1, 1.0], [33.2, 1.0], [33.3, 1.0], [33.4, 1.0], [33.5, 1.0], [33.6, 1.0], [33.7, 1.0], [33.8, 1.0], [33.9, 1.0], [34.0, 1.0], [34.1, 1.0], [34.2, 1.0], [34.3, 1.0], [34.4, 1.0], [34.5, 1.0], [34.6, 1.0], [34.7, 1.0], [34.8, 1.0], [34.9, 1.0], [35.0, 1.0], [35.1, 1.0], [35.2, 1.0], [35.3, 1.0], [35.4, 1.0], [35.5, 1.0], [35.6, 1.0], [35.7, 1.0], [35.8, 1.0], [35.9, 1.0], [36.0, 1.0], [36.1, 1.0], [36.2, 1.0], [36.3, 1.0], [36.4, 1.0], [36.5, 1.0], [36.6, 1.0], [36.7, 1.0], [36.8, 1.0], [36.9, 1.0], [37.0, 1.0], [37.1, 1.0], [37.2, 1.0], [37.3, 1.0], [37.4, 1.0], [37.5, 1.0], [37.6, 1.0], [37.7, 1.0], [37.8, 1.0], [37.9, 1.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 1.0], [41.4, 1.0], [41.5, 1.0], [41.6, 1.0], [41.7, 1.0], [41.8, 1.0], [41.9, 1.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 1.0], [51.0, 1.0], [51.1, 1.0], [51.2, 1.0], [51.3, 1.0], [51.4, 1.0], [51.5, 1.0], [51.6, 1.0], [51.7, 1.0], [51.8, 1.0], [51.9, 1.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 1.0], [52.6, 1.0], [52.7, 1.0], [52.8, 1.0], [52.9, 1.0], [53.0, 1.0], [53.1, 1.0], [53.2, 1.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 2.0], [54.0, 2.0], [54.1, 2.0], [54.2, 2.0], [54.3, 2.0], [54.4, 2.0], [54.5, 2.0], [54.6, 2.0], [54.7, 2.0], [54.8, 2.0], [54.9, 2.0], [55.0, 2.0], [55.1, 2.0], [55.2, 2.0], [55.3, 2.0], [55.4, 2.0], [55.5, 2.0], [55.6, 2.0], [55.7, 2.0], [55.8, 2.0], [55.9, 2.0], [56.0, 2.0], [56.1, 2.0], [56.2, 2.0], [56.3, 2.0], [56.4, 2.0], [56.5, 2.0], [56.6, 2.0], [56.7, 2.0], [56.8, 2.0], [56.9, 2.0], [57.0, 2.0], [57.1, 2.0], [57.2, 2.0], [57.3, 2.0], [57.4, 2.0], [57.5, 2.0], [57.6, 2.0], [57.7, 2.0], [57.8, 2.0], [57.9, 2.0], [58.0, 2.0], [58.1, 2.0], [58.2, 2.0], [58.3, 2.0], [58.4, 2.0], [58.5, 2.0], [58.6, 2.0], [58.7, 2.0], [58.8, 2.0], [58.9, 2.0], [59.0, 2.0], [59.1, 2.0], [59.2, 2.0], [59.3, 2.0], [59.4, 2.0], [59.5, 2.0], [59.6, 2.0], [59.7, 2.0], [59.8, 2.0], [59.9, 2.0], [60.0, 2.0], [60.1, 2.0], [60.2, 2.0], [60.3, 2.0], [60.4, 2.0], [60.5, 2.0], [60.6, 2.0], [60.7, 2.0], [60.8, 2.0], [60.9, 2.0], [61.0, 2.0], [61.1, 2.0], [61.2, 2.0], [61.3, 2.0], [61.4, 2.0], [61.5, 2.0], [61.6, 2.0], [61.7, 2.0], [61.8, 2.0], [61.9, 3.0], [62.0, 3.0], [62.1, 3.0], [62.2, 3.0], [62.3, 3.0], [62.4, 3.0], [62.5, 3.0], [62.6, 3.0], [62.7, 3.0], [62.8, 3.0], [62.9, 3.0], [63.0, 3.0], [63.1, 3.0], [63.2, 3.0], [63.3, 3.0], [63.4, 3.0], [63.5, 3.0], [63.6, 3.0], [63.7, 3.0], [63.8, 3.0], [63.9, 3.0], [64.0, 3.0], [64.1, 3.0], [64.2, 3.0], [64.3, 3.0], [64.4, 3.0], [64.5, 3.0], [64.6, 3.0], [64.7, 3.0], [64.8, 3.0], [64.9, 3.0], [65.0, 3.0], [65.1, 3.0], [65.2, 3.0], [65.3, 3.0], [65.4, 3.0], [65.5, 3.0], [65.6, 3.0], [65.7, 3.0], [65.8, 3.0], [65.9, 3.0], [66.0, 4.0], [66.1, 4.0], [66.2, 4.0], [66.3, 4.0], [66.4, 4.0], [66.5, 4.0], [66.6, 4.0], [66.7, 4.0], [66.8, 4.0], [66.9, 4.0], [67.0, 4.0], [67.1, 4.0], [67.2, 4.0], [67.3, 4.0], [67.4, 4.0], [67.5, 4.0], [67.6, 4.0], [67.7, 4.0], [67.8, 4.0], [67.9, 4.0], [68.0, 4.0], [68.1, 5.0], [68.2, 5.0], [68.3, 5.0], [68.4, 5.0], [68.5, 5.0], [68.6, 5.0], [68.7, 5.0], [68.8, 5.0], [68.9, 5.0], [69.0, 5.0], [69.1, 5.0], [69.2, 5.0], [69.3, 5.0], [69.4, 5.0], [69.5, 6.0], [69.6, 6.0], [69.7, 6.0], [69.8, 6.0], [69.9, 6.0], [70.0, 6.0], [70.1, 6.0], [70.2, 6.0], [70.3, 6.0], [70.4, 6.0], [70.5, 6.0], [70.6, 6.0], [70.7, 7.0], [70.8, 7.0], [70.9, 7.0], [71.0, 7.0], [71.1, 7.0], [71.2, 7.0], [71.3, 7.0], [71.4, 7.0], [71.5, 7.0], [71.6, 7.0], [71.7, 7.0], [71.8, 7.0], [71.9, 7.0], [72.0, 8.0], [72.1, 8.0], [72.2, 8.0], [72.3, 8.0], [72.4, 8.0], [72.5, 8.0], [72.6, 8.0], [72.7, 8.0], [72.8, 8.0], [72.9, 8.0], [73.0, 9.0], [73.1, 9.0], [73.2, 9.0], [73.3, 9.0], [73.4, 9.0], [73.5, 9.0], [73.6, 9.0], [73.7, 9.0], [73.8, 9.0], [73.9, 9.0], [74.0, 10.0], [74.1, 10.0], [74.2, 10.0], [74.3, 10.0], [74.4, 10.0], [74.5, 10.0], [74.6, 10.0], [74.7, 11.0], [74.8, 11.0], [74.9, 11.0], [75.0, 11.0], [75.1, 11.0], [75.2, 11.0], [75.3, 11.0], [75.4, 11.0], [75.5, 12.0], [75.6, 12.0], [75.7, 12.0], [75.8, 12.0], [75.9, 13.0], [76.0, 13.0], [76.1, 13.0], [76.2, 13.0], [76.3, 13.0], [76.4, 14.0], [76.5, 14.0], [76.6, 14.0], [76.7, 14.0], [76.8, 15.0], [76.9, 15.0], [77.0, 15.0], [77.1, 15.0], [77.2, 15.0], [77.3, 15.0], [77.4, 16.0], [77.5, 16.0], [77.6, 17.0], [77.7, 17.0], [77.8, 17.0], [77.9, 17.0], [78.0, 17.0], [78.1, 18.0], [78.2, 18.0], [78.3, 18.0], [78.4, 18.0], [78.5, 18.0], [78.6, 18.0], [78.7, 19.0], [78.8, 19.0], [78.9, 20.0], [79.0, 20.0], [79.1, 21.0], [79.2, 21.0], [79.3, 21.0], [79.4, 22.0], [79.5, 22.0], [79.6, 23.0], [79.7, 24.0], [79.8, 25.0], [79.9, 26.0], [80.0, 27.0], [80.1, 28.0], [80.2, 29.0], [80.3, 29.0], [80.4, 30.0], [80.5, 30.0], [80.6, 31.0], [80.7, 32.0], [80.8, 35.0], [80.9, 36.0], [81.0, 36.0], [81.1, 38.0], [81.2, 40.0], [81.3, 41.0], [81.4, 42.0], [81.5, 44.0], [81.6, 48.0], [81.7, 48.0], [81.8, 49.0], [81.9, 50.0], [82.0, 51.0], [82.1, 52.0], [82.2, 53.0], [82.3, 56.0], [82.4, 61.0], [82.5, 65.0], [82.6, 70.0], [82.7, 74.0], [82.8, 84.0], [82.9, 87.0], [83.0, 88.0], [83.1, 89.0], [83.2, 90.0], [83.3, 93.0], [83.4, 95.0], [83.5, 98.0], [83.6, 104.0], [83.7, 104.0], [83.8, 105.0], [83.9, 106.0], [84.0, 107.0], [84.1, 109.0], [84.2, 110.0], [84.3, 111.0], [84.4, 112.0], [84.5, 113.0], [84.6, 113.0], [84.7, 113.0], [84.8, 114.0], [84.9, 115.0], [85.0, 115.0], [85.1, 116.0], [85.2, 117.0], [85.3, 117.0], [85.4, 117.0], [85.5, 118.0], [85.6, 118.0], [85.7, 118.0], [85.8, 119.0], [85.9, 119.0], [86.0, 119.0], [86.1, 120.0], [86.2, 120.0], [86.3, 121.0], [86.4, 121.0], [86.5, 121.0], [86.6, 121.0], [86.7, 121.0], [86.8, 122.0], [86.9, 122.0], [87.0, 122.0], [87.1, 123.0], [87.2, 125.0], [87.3, 139.0], [87.4, 140.0], [87.5, 142.0], [87.6, 144.0], [87.7, 146.0], [87.8, 188.0], [87.9, 200.0], [88.0, 210.0], [88.1, 219.0], [88.2, 230.0], [88.3, 232.0], [88.4, 235.0], [88.5, 236.0], [88.6, 237.0], [88.7, 238.0], [88.8, 239.0], [88.9, 241.0], [89.0, 243.0], [89.1, 321.0], [89.2, 436.0], [89.3, 442.0], [89.4, 479.0], [89.5, 606.0], [89.6, 665.0], [89.7, 690.0], [89.8, 793.0], [89.9, 828.0], [90.0, 840.0], [90.1, 855.0], [90.2, 885.0], [90.3, 948.0], [90.4, 999.0], [90.5, 1008.0], [90.6, 1068.0], [90.7, 1072.0], [90.8, 1080.0], [90.9, 1102.0], [91.0, 1108.0], [91.1, 1115.0], [91.2, 1155.0], [91.3, 1168.0], [91.4, 1180.0], [91.5, 1183.0], [91.6, 1217.0], [91.7, 1231.0], [91.8, 1244.0], [91.9, 1257.0], [92.0, 1262.0], [92.1, 1266.0], [92.2, 1269.0], [92.3, 1270.0], [92.4, 1271.0], [92.5, 1272.0], [92.6, 1273.0], [92.7, 1275.0], [92.8, 1278.0], [92.9, 1280.0], [93.0, 1289.0], [93.1, 1304.0], [93.2, 1331.0], [93.3, 1360.0], [93.4, 1401.0], [93.5, 1409.0], [93.6, 1419.0], [93.7, 1425.0], [93.8, 1431.0], [93.9, 1482.0], [94.0, 1486.0], [94.1, 1541.0], [94.2, 1543.0], [94.3, 1545.0], [94.4, 1553.0], [94.5, 1560.0], [94.6, 1579.0], [94.7, 1585.0], [94.8, 1586.0], [94.9, 1589.0], [95.0, 1601.0], [95.1, 1613.0], [95.2, 1621.0], [95.3, 1624.0], [95.4, 1631.0], [95.5, 1636.0], [95.6, 1638.0], [95.7, 1642.0], [95.8, 1646.0], [95.9, 1650.0], [96.0, 1660.0], [96.1, 1666.0], [96.2, 1673.0], [96.3, 1677.0], [96.4, 1683.0], [96.5, 1692.0], [96.6, 1695.0], [96.7, 1696.0], [96.8, 1696.0], [96.9, 1698.0], [97.0, 1698.0], [97.1, 1700.0], [97.2, 1700.0], [97.3, 1701.0], [97.4, 1702.0], [97.5, 1703.0], [97.6, 1705.0], [97.7, 1707.0], [97.8, 1709.0], [97.9, 1711.0], [98.0, 1715.0], [98.1, 1720.0], [98.2, 1723.0], [98.3, 1735.0], [98.4, 1736.0], [98.5, 1737.0], [98.6, 1738.0], [98.7, 1739.0], [98.8, 1740.0], [98.9, 1743.0], [99.0, 1746.0], [99.1, 1750.0], [99.2, 1751.0], [99.3, 1752.0], [99.4, 1774.0], [99.5, 1785.0], [99.6, 1789.0], [99.7, 1911.0], [99.8, 6488.0], [99.9, 7838.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 8351.0, "series": [{"data": [[0.0, 12.0], [600.0, 89.0], [700.0, 182.0], [800.0, 56.0], [200.0, 90.0], [3200.0, 1.0], [900.0, 3.0], [1000.0, 124.0], [1100.0, 39.0], [300.0, 130.0], [5000.0, 1.0], [5100.0, 3.0], [5300.0, 6.0], [5200.0, 2.0], [5400.0, 3.0], [5500.0, 6.0], [5600.0, 1.0], [100.0, 220.0], [400.0, 92.0], [1700.0, 1.0], [500.0, 32.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 145.0], [2100.0, 3.0], [2300.0, 3.0], [2200.0, 2.0], [600.0, 4.0], [2400.0, 7.0], [2500.0, 2.0], [2600.0, 2.0], [700.0, 9.0], [200.0, 48.0], [800.0, 66.0], [900.0, 137.0], [1000.0, 175.0], [1100.0, 120.0], [1200.0, 34.0], [300.0, 41.0], [1300.0, 87.0], [1400.0, 28.0], [1500.0, 14.0], [400.0, 8.0], [100.0, 97.0], [1800.0, 1.0], [500.0, 57.0], [2000.0, 3.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 8351.0], [600.0, 23.0], [700.0, 13.0], [800.0, 39.0], [900.0, 17.0], [1000.0, 47.0], [1100.0, 63.0], [1200.0, 159.0], [1300.0, 26.0], [1400.0, 68.0], [1500.0, 96.0], [1600.0, 210.0], [100.0, 437.0], [1700.0, 257.0], [1800.0, 3.0], [1900.0, 1.0], [2000.0, 3.0], [2100.0, 3.0], [3300.0, 1.0], [200.0, 117.0], [300.0, 11.0], [400.0, 30.0], [6500.0, 2.0], [6600.0, 1.0], [6400.0, 3.0], [7600.0, 1.0], [7700.0, 2.0], [7800.0, 7.0], [7900.0, 6.0], [500.0, 2.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 7900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 85.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 11044.0, "series": [{"data": [[0.0, 339.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 717.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 85.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 11044.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 490.585063602788, "minX": 1.70302284E12, "maxY": 490.585063602788, "series": [{"data": [[1.70302284E12, 490.585063602788]], "isOverall": false, "label": "Users", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70302284E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 5678.0, "series": [{"data": [[61.0, 5035.0], [62.0, 5187.0], [64.0, 5240.0], [65.0, 5202.5], [71.0, 3292.0], [82.0, 5678.0], [1396.0, 867.1297468354433], [1395.0, 405.2424677187952], [1394.0, 310.38], [86.0, 5563.0], [1450.0, 0.0], [1451.0, 0.6], [99.0, 5068.599999999999], [100.0, 5336.0], [102.0, 5586.0], [101.0, 5515.0], [108.0, 5303.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1366.8920402561741, 636.3101555352252]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[61.0, 2692.0], [62.0, 1237.0], [64.0, 2436.0], [65.0, 1869.5], [71.0, 89.0], [82.0, 2259.0], [1396.0, 546.1297468354433], [1395.0, 871.332855093256], [1394.0, 814.44], [86.0, 2355.0], [1450.0, 2054.0], [1451.0, 1722.6], [99.0, 1939.7], [100.0, 2072.3333333333335], [102.0, 2331.0], [101.0, 2402.0], [108.0, 1184.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1366.8920402561769, 802.9487648673374]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[2.0, 2.222222222222222], [3.0, 2.9594594594594597], [4.0, 5.246031746031744], [5.0, 4.036144578313252], [6.0, 3.7499999999999996], [7.0, 2.901408450704225], [8.0, 3.610576923076925], [9.0, 3.442307692307692], [10.0, 2.1315789473684212], [11.0, 4.111801242236023], [12.0, 5.186991869918698], [13.0, 2.475247524752475], [14.0, 2.216867469879519], [15.0, 2.464285714285715], [16.0, 4.8275862068965525], [17.0, 5.20408163265306], [18.0, 13.288461538461537], [19.0, 7.8095238095238075], [20.0, 5.666666666666666], [21.0, 3.551724137931034], [22.0, 4.5227272727272725], [23.0, 2.8933333333333326], [24.0, 2.8989898989898983], [25.0, 4.664473684210528], [26.0, 3.745098039215686], [27.0, 3.178770949720671], [28.0, 2.3165829145728645], [29.0, 3.810699588477365], [30.0, 3.150234741784038], [31.0, 2.9936708860759498], [32.0, 2.258503401360545], [33.0, 5.177304964539007], [34.0, 5.471544715447154], [35.0, 4.110344827586209], [37.0, 3.352941176470589], [36.0, 3.472868217054265], [39.0, 2.409090909090909], [38.0, 2.8053097345132745], [41.0, 2.6470588235294112], [40.0, 2.020408163265306], [43.0, 2.92], [42.0, 4.57608695652174], [44.0, 2.1866666666666665], [45.0, 2.526315789473684], [46.0, 6.2888888888888905], [47.0, 4.80357142857143], [49.0, 4.4655172413793105], [48.0, 3.1857142857142846], [51.0, 5.390243902439025], [50.0, 4.576923076923075], [53.0, 7.148936170212769], [52.0, 4.074074074074074], [55.0, 3.978260869565218], [54.0, 6.324324324324324], [57.0, 6.282608695652173], [56.0, 10.32692307692308], [59.0, 9.035714285714285], [58.0, 4.312499999999999], [61.0, 256.0000000000001], [60.0, 5.260869565217392], [63.0, 2.3055555555555554], [62.0, 214.8387096774194], [67.0, 4.5200000000000005], [66.0, 5.0], [65.0, 408.25714285714287], [64.0, 280.10714285714283], [69.0, 6.199999999999999], [68.0, 11.451612903225806], [71.0, 145.82142857142858], [70.0, 6.0], [73.0, 2.8500000000000005], [75.0, 7.499999999999999], [72.0, 3.533333333333333], [74.0, 11.249999999999998], [76.0, 10.45], [77.0, 3.833333333333333], [79.0, 6.25], [78.0, 13.538461538461537], [83.0, 10.0], [80.0, 7.5], [81.0, 2.7500000000000004], [82.0, 403.44999999999993], [86.0, 319.20000000000005], [87.0, 3.875], [85.0, 1.4615384615384615], [84.0, 3.0], [91.0, 3.333333333333333], [89.0, 1.3846153846153846], [88.0, 1.4285714285714286], [90.0, 2.9333333333333336], [95.0, 0.8333333333333334], [94.0, 0.28571428571428575], [93.0, 0.7], [92.0, 1.3846153846153846], [99.0, 2266.129032258065], [98.0, 11.75], [97.0, 0.8181818181818181], [96.0, 0.8333333333333334], [103.0, 18.0], [102.0, 599.9285714285713], [101.0, 880.2222222222222], [100.0, 2223.4], [105.0, 3.2142857142857144], [106.0, 17.76923076923077], [104.0, 15.2], [107.0, 12.850000000000001], [111.0, 4.7272727272727275], [110.0, 3.0], [109.0, 1.2], [108.0, 1303.4], [114.0, 3.6666666666666665], [113.0, 1.5000000000000002], [112.0, 17.555555555555557], [115.0, 3.8181818181818183], [119.0, 4.75], [117.0, 3.7142857142857144], [116.0, 2.4545454545454546], [118.0, 4.166666666666666], [122.0, 6.375000000000001], [121.0, 6.230769230769231], [120.0, 4.6875], [123.0, 2.7333333333333334], [127.0, 6.2], [124.0, 4.0], [126.0, 4.5], [125.0, 4.625000000000001], [129.0, 12.571428571428571], [135.0, 4.583333333333333], [132.0, 5.2], [131.0, 6.166666666666666], [130.0, 8.0], [128.0, 7.0], [134.0, 5.714285714285714], [133.0, 5.625000000000001], [136.0, 4.749999999999999], [141.0, 3.8000000000000003], [140.0, 1.8], [139.0, 4.75], [138.0, 2.5], [137.0, 3.5294117647058822], [143.0, 6.142857142857143], [142.0, 5.875], [151.0, 9.285714285714286], [150.0, 8.5], [149.0, 9.75], [148.0, 8.875], [147.0, 8.125], [146.0, 3.4], [145.0, 7.5], [144.0, 7.5], [159.0, 7.0], [158.0, 5.333333333333333], [157.0, 1.0], [156.0, 7.5], [155.0, 8.454545454545453], [154.0, 6.666666666666667], [153.0, 7.8], [152.0, 8.0], [166.0, 2.0], [165.0, 6.333333333333333], [164.0, 5.5], [163.0, 0.0], [162.0, 6.333333333333333], [161.0, 6.5], [160.0, 3.5], [167.0, 7.666666666666667], [174.0, 6.2], [173.0, 6.0], [172.0, 11.0], [171.0, 7.75], [170.0, 6.75], [169.0, 7.5], [168.0, 6.875], [175.0, 4.0], [183.0, 13.4], [182.0, 10.6], [181.0, 35.0], [180.0, 24.0], [179.0, 19.0], [178.0, 40.666666666666664], [177.0, 9.333333333333334], [176.0, 15.0], [191.0, 31.0], [189.0, 15.0], [188.0, 18.0], [187.0, 15.25], [186.0, 50.0], [185.0, 6.333333333333334], [199.0, 31.0], [198.0, 34.66666666666667], [196.0, 6.333333333333334], [195.0, 18.0], [194.0, 26.0], [193.0, 11.333333333333332], [192.0, 23.0], [204.0, 16.0], [205.0, 16.5], [207.0, 19.875], [206.0, 18.0], [203.0, 26.0], [202.0, 27.5], [201.0, 27.666666666666668], [200.0, 47.666666666666664], [215.0, 21.666666666666668], [212.0, 20.5], [211.0, 23.333333333333332], [213.0, 19.0], [209.0, 21.5], [223.0, 27.0], [221.0, 30.0], [218.0, 38.25], [217.0, 20.0], [222.0, 34.5], [216.0, 17.5], [227.0, 43.0], [225.0, 37.0], [224.0, 34.4], [231.0, 49.0], [230.0, 13.0], [228.0, 32.0], [226.0, 50.0], [239.0, 48.0], [238.0, 35.666666666666664], [237.0, 37.0], [236.0, 36.0], [235.0, 13.0], [233.0, 48.0], [232.0, 13.0], [247.0, 38.333333333333336], [246.0, 35.333333333333336], [245.0, 17.0], [244.0, 39.333333333333336], [243.0, 50.0], [241.0, 39.0], [240.0, 29.0], [242.0, 28.5], [253.0, 44.0], [250.0, 36.333333333333336], [249.0, 38.333333333333336], [248.0, 29.0], [254.0, 25.0], [252.0, 26.0], [268.0, 21.75], [266.0, 35.666666666666664], [267.0, 39.0], [265.0, 25.0], [264.0, 13.0], [263.0, 29.5], [261.0, 21.0], [260.0, 41.0], [262.0, 23.5], [258.0, 25.0], [259.0, 8.0], [257.0, 35.0], [256.0, 41.5], [271.0, 6.0], [270.0, 37.0], [269.0, 6.0], [286.0, 26.0], [287.0, 25.0], [285.0, 26.0], [284.0, 27.0], [283.0, 28.0], [282.0, 28.0], [281.0, 28.0], [280.0, 29.0], [279.0, 5.0], [273.0, 31.0], [272.0, 31.0], [275.0, 30.0], [274.0, 5.0], [278.0, 29.0], [277.0, 5.0], [276.0, 30.0], [301.0, 24.0], [303.0, 32.5], [300.0, 22.0], [291.0, 23.0], [290.0, 24.0], [289.0, 24.0], [288.0, 25.0], [299.0, 20.0], [298.0, 36.0], [297.0, 36.0], [296.0, 21.0], [295.0, 20.0], [294.0, 22.0], [293.0, 23.0], [292.0, 13.0], [318.0, 20.0], [319.0, 15.0], [317.0, 31.0], [316.0, 36.0], [315.0, 38.0], [314.0, 48.0], [313.0, 49.0], [312.0, 45.0], [311.0, 37.0], [304.0, 36.0], [307.0, 51.0], [306.0, 36.5], [310.0, 51.0], [309.0, 51.0], [308.0, 38.0], [323.0, 1.0], [335.0, 1.5], [333.0, 1.0], [331.0, 1.0], [329.0, 1.0], [328.0, 0.5], [326.0, 1.5], [324.0, 1.0], [322.0, 1.0], [321.0, 1.0], [320.0, 15.0], [350.0, 0.0], [351.0, 0.0], [349.0, 0.5], [339.0, 1.5], [337.0, 1.5], [347.0, 0.0], [346.0, 0.0], [345.0, 1.0], [344.0, 0.0], [343.0, 0.0], [342.0, 1.0], [341.0, 1.0], [355.0, 0.0], [367.0, 0.0], [365.0, 0.5], [363.0, 0.0], [361.0, 0.5], [359.0, 0.0], [357.0, 0.0], [354.0, 0.0], [353.0, 0.0], [352.0, 1.0], [382.0, 1.0], [383.0, 1.0], [381.0, 1.0], [380.0, 0.0], [379.0, 3.0], [378.0, 2.0], [377.0, 1.0], [376.0, 2.0], [374.0, 2.0], [369.0, 1.0], [368.0, 0.5], [371.0, 0.0], [370.0, 0.0], [373.0, 1.0], [372.0, 1.0], [397.0, 0.0], [386.0, 53.4], [391.0, 0.0], [385.0, 1.0], [384.0, 1.0], [390.0, 18.0], [388.0, 60.0], [389.0, 68.0], [393.0, 78.66666666666666], [395.0, 118.0], [399.0, 0.0], [392.0, 0.0], [396.0, 0.5], [387.0, 0.0], [394.0, 0.0], [414.0, 1.0], [415.0, 1.0], [413.0, 1.0], [412.0, 1.0], [411.0, 0.0], [410.0, 1.0], [409.0, 0.0], [408.0, 0.0], [407.0, 0.0], [401.0, 1.0], [400.0, 0.0], [403.0, 1.0], [402.0, 1.0], [406.0, 0.0], [405.0, 0.0], [404.0, 1.0], [419.0, 1.5], [431.0, 1.0], [426.0, 1.0], [429.0, 1.0], [427.0, 1.0], [425.0, 1.5], [423.0, 0.5], [421.0, 0.5], [417.0, 1.0], [416.0, 1.0], [444.0, 1.5], [438.0, 2.5], [446.0, 2.5], [443.0, 1.5], [441.0, 3.0], [440.0, 0.0], [439.0, 0.0], [436.0, 0.5], [434.0, 0.0], [432.0, 0.5], [462.0, 1.0], [460.0, 3.0], [459.0, 3.0], [458.0, 1.0], [457.0, 1.0], [456.0, 2.0], [454.0, 2.5], [452.0, 1.5], [450.0, 1.0], [449.0, 1.0], [477.0, 1.0], [469.0, 1.3333333333333335], [468.0, 1.0], [470.0, 1.0], [471.0, 77.0], [466.0, 0.0], [464.0, 0.0], [476.0, 0.0], [467.0, 0.0], [473.0, 0.3333333333333333], [474.0, 0.5], [475.0, 14.333333333333332], [479.0, 1.0], [478.0, 0.0], [483.0, 0.0], [489.0, 1.5], [486.0, 0.33333333333333337], [494.0, 3.5], [493.0, 3.0], [490.0, 1.5], [488.0, 0.0], [484.0, 1.0], [482.0, 0.5], [480.0, 0.0], [510.0, 3.0], [501.0, 2.0], [500.0, 1.0], [497.0, 2.0], [508.0, 3.0], [498.0, 4.0], [507.0, 2.0], [506.0, 3.0], [505.0, 1.0], [504.0, 3.0], [503.0, 2.0], [496.0, 4.0], [502.0, 2.0], [540.0, 7.0], [532.0, 4.0], [542.0, 9.0], [528.0, 5.0], [531.0, 4.5], [529.0, 5.0], [538.0, 8.0], [537.0, 7.0], [536.0, 3.0], [519.0, 1.0], [518.0, 1.0], [517.0, 1.0], [516.0, 1.0], [515.0, 0.0], [514.0, 1.5], [512.0, 1.0], [527.0, 5.0], [526.0, 6.0], [525.0, 5.0], [524.0, 1.0], [522.0, 0.0], [521.0, 0.0], [520.0, 0.0], [535.0, 4.0], [534.0, 4.0], [533.0, 4.0], [572.0, 126.0], [571.0, 26.6], [575.0, 60.5], [561.0, 52.33333333333333], [560.0, 83.25], [563.0, 76.0], [562.0, 56.5], [565.0, 75.5], [564.0, 57.0], [574.0, 126.0], [573.0, 64.5], [570.0, 74.0], [569.0, 73.5], [568.0, 66.0], [559.0, 116.0], [544.0, 9.5], [548.0, 10.5], [546.0, 10.0], [550.0, 6.0], [549.0, 20.0], [558.0, 2.0], [556.0, 3.5], [554.0, 4.0], [553.0, 4.0], [567.0, 65.5], [566.0, 74.5], [601.0, 80.33333333333334], [605.0, 100.6], [597.0, 80.0], [596.0, 80.66666666666666], [595.0, 61.0], [594.0, 61.5], [593.0, 62.0], [592.0, 62.0], [607.0, 104.4], [606.0, 79.0], [599.0, 101.14285714285714], [600.0, 103.57142857142857], [583.0, 43.33333333333333], [582.0, 121.0], [581.0, 43.66666666666667], [580.0, 110.0], [579.0, 50.0], [578.0, 49.33333333333333], [577.0, 123.0], [576.0, 45.33333333333333], [591.0, 44.33333333333333], [590.0, 170.0], [589.0, 50.0], [588.0, 120.0], [587.0, 44.0], [586.0, 62.0], [585.0, 62.5], [584.0, 119.0], [598.0, 90.25], [603.0, 100.4], [602.0, 60.5], [604.0, 111.57142857142857], [612.0, 73.8], [635.0, 0.0], [624.0, 56.49999999999999], [639.0, 5.333333333333333], [637.0, 5.0], [636.0, 1.0], [625.0, 109.66666666666667], [626.0, 37.0], [627.0, 110.0], [628.0, 38.0], [629.0, 176.5], [631.0, 152.33333333333334], [630.0, 89.0], [610.0, 68.0], [609.0, 110.60000000000002], [608.0, 113.33333333333333], [617.0, 65.5], [616.0, 114.0], [619.0, 83.14285714285714], [620.0, 104.14285714285714], [621.0, 104.125], [622.0, 96.66666666666666], [623.0, 109.5], [618.0, 116.8], [611.0, 112.33333333333333], [613.0, 109.4], [614.0, 120.0], [615.0, 89.71428571428571], [632.0, 140.8], [633.0, 115.5], [634.0, 1.0], [668.0, 235.0], [641.0, 6.0], [655.0, 2.0], [653.0, 1.0], [652.0, 2.0], [651.0, 2.0], [649.0, 3.0], [648.0, 3.0], [671.0, 235.0], [657.0, 5.0], [660.0, 7.0], [659.0, 8.0], [670.0, 236.0], [669.0, 235.0], [667.0, 220.0], [666.0, 236.0], [665.0, 115.5], [647.0, 2.0], [646.0, 3.0], [644.0, 3.5], [643.0, 5.0], [642.0, 4.0], [663.0, 7.0], [662.0, 7.5], [701.0, 17.0], [698.0, 17.0], [703.0, 16.0], [699.0, 18.0], [697.0, 20.0], [678.0, 9.0], [677.0, 226.0], [676.0, 187.0], [675.0, 233.0], [673.0, 9.0], [672.0, 236.0], [687.0, 6.0], [686.0, 6.0], [685.0, 6.0], [684.0, 7.0], [683.0, 4.0], [682.0, 6.5], [680.0, 7.0], [695.0, 17.5], [694.0, 18.5], [692.0, 12.5], [689.0, 6.0], [734.0, 142.5], [735.0, 127.0], [722.0, 21.0], [721.0, 20.0], [724.0, 21.0], [723.0, 21.0], [732.0, 153.0], [731.0, 125.6], [730.0, 200.0], [729.0, 76.33333333333333], [719.0, 19.0], [706.0, 15.0], [705.0, 16.0], [709.0, 19.0], [707.0, 20.5], [718.0, 19.5], [716.0, 19.0], [714.0, 19.5], [712.0, 19.666666666666668], [727.0, 81.33333333333333], [725.0, 201.0], [726.0, 21.0], [764.0, 154.33333333333334], [767.0, 194.33333333333334], [753.0, 238.5], [752.0, 153.0], [755.0, 230.0], [754.0, 155.0], [757.0, 176.5], [756.0, 154.33333333333334], [766.0, 171.5], [765.0, 242.0], [763.0, 232.0], [762.0, 151.33333333333334], [761.0, 239.0], [760.0, 152.0], [751.0, 216.83333333333331], [737.0, 235.33333333333334], [738.0, 22.0], [736.0, 129.0], [741.0, 165.33333333333331], [740.0, 22.0], [739.0, 93.0], [743.0, 201.0], [742.0, 130.0], [749.0, 184.75], [745.0, 166.0], [748.0, 25.5], [747.0, 25.0], [744.0, 165.66666666666669], [759.0, 239.0], [758.0, 171.5], [773.0, 172.5], [781.0, 238.66666666666666], [796.0, 1.0], [795.0, 121.0], [793.0, 121.0], [792.0, 121.0], [799.0, 121.0], [784.0, 121.0], [788.0, 120.0], [785.0, 121.0], [791.0, 121.0], [789.0, 120.5], [798.0, 121.0], [775.0, 171.5], [774.0, 240.0], [772.0, 152.66666666666666], [771.0, 172.5], [770.0, 229.0], [769.0, 152.66666666666666], [768.0, 177.5], [783.0, 239.0], [782.0, 160.66666666666666], [780.0, 160.0], [779.0, 240.0], [778.0, 156.0], [777.0, 238.0], [776.0, 175.5], [829.0, 121.0], [831.0, 121.0], [827.0, 121.0], [825.0, 121.0], [823.0, 121.0], [821.0, 121.0], [819.0, 121.0], [817.0, 121.0], [815.0, 121.5], [803.0, 122.0], [801.0, 122.0], [807.0, 122.0], [805.0, 122.0], [813.0, 121.5], [811.0, 121.0], [809.0, 121.5], [860.0, 120.0], [862.0, 120.0], [858.0, 120.0], [856.0, 120.0], [854.0, 121.0], [852.0, 121.0], [850.0, 121.0], [848.0, 121.0], [846.0, 122.0], [833.0, 121.0], [836.0, 122.0], [835.0, 122.0], [839.0, 122.0], [838.0, 122.0], [844.0, 122.0], [843.0, 123.0], [841.0, 122.5], [889.0, 117.0], [878.0, 238.0], [877.0, 163.4], [876.0, 200.0], [875.0, 129.5], [874.0, 118.0], [873.0, 118.0], [872.0, 118.0], [880.0, 240.42857142857142], [881.0, 244.0], [883.0, 117.0], [882.0, 117.0], [887.0, 117.0], [886.0, 117.0], [879.0, 178.75], [865.0, 120.0], [864.0, 120.0], [867.0, 119.0], [866.0, 119.0], [869.0, 119.0], [868.0, 119.0], [871.0, 118.0], [870.0, 119.0], [890.0, 117.0], [892.0, 116.0], [891.0, 116.0], [895.0, 116.0], [894.0, 116.0], [925.0, 109.0], [906.0, 65.5], [905.0, 114.0], [904.0, 114.0], [907.0, 114.0], [910.0, 114.0], [898.0, 115.0], [896.0, 115.5], [908.0, 157.0], [900.0, 77.0], [919.0, 57.0], [918.0, 113.5], [917.0, 113.0], [915.0, 113.0], [913.0, 114.0], [924.0, 150.0], [927.0, 119.0], [926.0, 111.0], [923.0, 110.0], [922.0, 110.0], [921.0, 112.0], [920.0, 110.0], [903.0, 114.0], [901.0, 115.0], [955.0, 118.0], [936.0, 70.0], [938.0, 104.0], [942.0, 104.0], [929.0, 106.0], [932.0, 105.0], [930.0, 105.5], [935.0, 105.0], [934.0, 105.0], [940.0, 104.0], [952.0, 171.33333333333334], [954.0, 171.33333333333334], [959.0, 119.0], [946.0, 103.5], [944.0, 104.0], [949.0, 102.0], [948.0, 103.5], [958.0, 119.0], [956.0, 118.5], [953.0, 118.0], [951.0, 118.0], [950.0, 117.0], [966.0, 158.0], [987.0, 0.0], [989.0, 0.0], [971.0, 59.0], [962.0, 211.0], [961.0, 149.33333333333334], [960.0, 142.0], [975.0, 117.0], [974.0, 117.0], [963.0, 129.4], [964.0, 109.66666666666667], [965.0, 157.0], [991.0, 1.0], [979.0, 164.0], [978.0, 117.0], [977.0, 117.0], [968.0, 164.5], [970.0, 118.0], [969.0, 118.0], [967.0, 164.5], [1070.0, 1.0], [1072.0, 0.0], [1082.0, 1.0], [1108.0, 1.0], [1278.0, 287.4], [1328.0, 0.375], [1330.0, 0.2777777777777778], [1282.0, 159.55555555555554], [1304.0, 1.0], [1298.0, 0.0], [1290.0, 2.0], [1314.0, 1.0256410256410258], [1316.0, 0.75], [1342.0, 11.5], [1332.0, 0.0], [1318.0, 0.0], [1322.0, 0.0], [1356.0, 0.3076923076923077], [1350.0, 0.0], [1396.0, 1423.0759493670885], [1394.0, 1215.1296296296296], [1380.0, 0.0], [1386.0, 0.0], [1362.0, 33.0], [1358.0, 0.33333333333333337], [1354.0, 0.0], [1352.0, 0.20833333333333331], [1348.0, 0.6666666666666666], [1346.0, 0.3333333333333333], [1344.0, 0.6666666666666666], [1370.0, 0.0], [1374.0, 1.0], [1450.0, 114.94444444444444], [1418.0, 0.5], [1414.0, 0.5], [1432.0, 0.5], [1047.0, 7.0], [1069.0, 1.0], [1073.0, 0.0], [1341.0, 2.4], [1315.0, 0.5405405405405406], [1289.0, 0.0], [1301.0, 1.0], [1329.0, 0.37499999999999994], [1313.0, 0.3333333333333333], [1343.0, 5.0], [1335.0, 0.0], [1333.0, 0.0], [1331.0, 0.0], [1339.0, 1.0], [1323.0, 0.0], [1325.0, 0.5], [1327.0, 0.75], [1403.0, 0.14285714285714288], [1359.0, 1.0], [1395.0, 1397.669515669518], [1393.0, 0.3333333333333333], [1377.0, 0.5], [1379.0, 1.0], [1383.0, 1.0], [1385.0, 0.0], [1363.0, 0.4], [1357.0, 0.25], [1355.0, 0.2], [1353.0, 1.0], [1351.0, 0.4444444444444444], [1347.0, 0.25], [1367.0, 0.6666666666666666], [1373.0, 2.0], [1409.0, 0.0], [1415.0, 1.0], [1417.0, 0.5], [1423.0, 0.75], [1451.0, 1230.9999999999998], [1427.0, 0.0], [1429.0, 0.0], [1431.0, 0.6666666666666666], [1413.0, 0.0], [1.0, 0.5217391304347826]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[299.004700470047, 179.92569256925674]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1451.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 4242.7, "minX": 1.70302284E12, "maxY": 1395345.35, "series": [{"data": [[1.70302284E12, 1395345.35]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70302284E12, 4242.7]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70302284E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 179.92569256925674, "minX": 1.70302284E12, "maxY": 802.9487648673374, "series": [{"data": [[1.70302284E12, 636.3101555352252]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70302284E12, 802.9487648673374]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70302284E12, 179.92569256925674]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70302284E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 70.12171217121761, "minX": 1.70302284E12, "maxY": 641.9908508691677, "series": [{"data": [[1.70302284E12, 81.14913083257089]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70302284E12, 641.9908508691677]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70302284E12, 70.12171217121761]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70302284E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 72.25642564256412, "minX": 1.70302284E12, "maxY": 599.7154620311069, "series": [{"data": [[1.70302284E12, 599.7154620311069]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70302284E12, 550.8517840805122]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70302284E12, 72.25642564256412]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70302284E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 76.0, "minX": 1.70302284E12, "maxY": 7937.0, "series": [{"data": [[1.70302284E12, 7937.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70302284E12, 76.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70302284E12, 1399.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70302284E12, 7820.48]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70302284E12, 959.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.70302284E12, 2396.2999999999947]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70302284E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 397.0, "maxY": 5632.0, "series": [{"data": [[2418.0, 1150.0], [593.0, 2685.0], [1216.0, 912.0], [766.0, 89.0], [397.0, 97.0], [871.0, 3336.5], [928.0, 5632.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2418.0, 861.5], [593.0, 1.0], [588.0, 1.0], [1216.0, 0.0], [1272.0, 20.0], [1307.0, 1.0], [766.0, 1.0], [397.0, 1.0], [851.0, 1.0], [871.0, 1.0], [928.0, 1.0], [978.0, 1.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2418.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 397.0, "maxY": 2685.0, "series": [{"data": [[2418.0, 87.0], [593.0, 2685.0], [1216.0, 769.0], [766.0, 89.0], [397.0, 97.0], [871.0, 1058.5], [928.0, 2685.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2418.0, 0.0], [593.0, 0.0], [588.0, 0.0], [1216.0, 0.0], [1272.0, 0.0], [1307.0, 0.0], [766.0, 0.0], [397.0, 0.0], [851.0, 0.0], [871.0, 0.0], [928.0, 0.0], [978.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 2418.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 203.08333333333334, "minX": 1.70302284E12, "maxY": 203.08333333333334, "series": [{"data": [[1.70302284E12, 203.08333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70302284E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.8, "minX": 1.70302284E12, "maxY": 142.45, "series": [{"data": [[1.70302284E12, 0.8]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.70302284E12, 18.216666666666665]], "isOverall": false, "label": "301", "isController": false}, {"data": [[1.70302284E12, 142.45]], "isOverall": false, "label": "Non HTTP response code: java.net.BindException", "isController": false}, {"data": [[1.70302284E12, 41.61666666666667]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70302284E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.4, "minX": 1.70302284E12, "maxY": 166.25, "series": [{"data": [[1.70302284E12, 166.25]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}, {"data": [[1.70302284E12, 0.4]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.70302284E12, 18.216666666666665]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.70302284E12, 17.816666666666666]], "isOverall": false, "label": "HTTP Request-1-failure", "isController": false}, {"data": [[1.70302284E12, 0.4]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70302284E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 19.016666666666666, "minX": 1.70302284E12, "maxY": 184.06666666666666, "series": [{"data": [[1.70302284E12, 19.016666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.70302284E12, 184.06666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70302284E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

